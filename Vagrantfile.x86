#  -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Vagrantfile for ansible-common-role
# 2207.23 added alma9 and rocky9
# 2303.04 added fedora37
# 2304.21 added fedora38, removed fedora33-35
# 2305.06 vagrantup.com SSL cert expired on 10.13; installing vagrant 2.3.0 gives warning because cert expired
# 2307.04 added debian 12; vagrant 2.3.4 works on catalina but stand-alone version more current
# 2404.30 removed older suse & fedora boxes; added fedora-39,40
# 2405.27 removed fedora 39; there's no box for it yet
# 2407.05 added fedora 39+40;
# 2507.13 update for virtualbox 7.1 on zorin


Vagrant.configure("2") do |config|
  # config.vm.network 'forwarded_port', guest: 80, host: 8080
  config.vm.box_download_insecure = true
  config.vm.provider "virtualbox"
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.ssh.insert_key = false
  config.vm.boot_timeout = 120
  config.vm.provider :virtualbox do |vb|
    #vb.gui = true
    vb.memory = '1024'
  end
  # provision on all machines to allow ssh w/o checking
  config.vm.provision "shell", inline: <<-SHELLALL
    echo "...disabling CheckHostIP..."
    sed -i.orig -e "s/#   CheckHostIP yes/CheckHostIP no/" /etc/ssh/ssh_config
    sed -i -e "s/.*PermitRootLogin.*/PermitRootLogin yes/" /etc/ssh/ssh_config
#     for i in /etc/sysconfig/network-scripts/ifcfg-eth1 /etc/sysconfig/network-scripts/ifcfg-enp0s8; do
#       if [ -e ${i} ]; then echo "...displaying ${i}..."; cat ${i}; fi
#     done
  SHELLALL

  config.vm.define "a2" do |a2|
    # a2.vm.box = "bento/amazonlinux-2"
    a2.vm.box = "bento/amazonlinux-2023"
    a2.ssh.insert_key = false
    a2.vm.network 'private_network', ip: '10.1.100.190'
    a2.vm.hostname = 'a2.test'
    a2.vm.provision "shell", inline: <<-SHELL
      # dnf upgrade --releasever=2023.8.20250707
      dnf install -y python3-pip
      python3 -m pip install --upgrade pip setuptools pip
    SHELL
    a2.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end


  ################## almalinux 8.10 7/13/25
  config.vm.define "a8" do |a8|
    a8.vm.box = "almalinux/8"
    a8.ssh.insert_key = false
    a8.vm.network 'private_network', ip: '10.1.100.188'
    a8.vm.hostname = 'a8.test'
    a8.vm.provision "shell", inline: <<-SHELL
      dnf install -y epel-release python3
      dnf config-manager --set-enabled powertools
      dnf makecache
      # dnf install -y ansible
      alternatives --set python /usr/bin/python3
    SHELL
    a8.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end

  ################## almalinux 9.6 7/13/25
  config.vm.define "a9" do |a9|
    a9.vm.box = "almalinux/9"
    a9.ssh.insert_key = false
    a9.vm.network 'private_network', ip: '10.1.100.189'
    a9.vm.hostname = 'a9.test'
    a9.vm.provision "shell", inline: <<-SHELL
      dnf install -y epel-release python3
      dnf makecache
    SHELL
    a9.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end
  ################### almalinux 10.0 7/13/25 [won't ssh]



  ################### centos 7 7/13/25
  config.vm.define "c7" do |c7|
    c7.vm.box = "centos/7"
    c7.ssh.insert_key = false
    c7.vm.network 'private_network', ip: '10.1.100.107'
    c7.vm.hostname = 'c7.test'
    c7.vm.provision "shell", inline: <<-SHELL
      yum install -y python libselinux-python
    SHELL
    c7.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end


  ################## rockylinux 8.9 7/13/25
  config.vm.define "r8" do |r8|
    r8.vm.box = "generic/rocky8"
    r8.ssh.insert_key = false
    r8.vm.network 'private_network', ip: '10.1.100.198'
    r8.vm.hostname = 'r8.test'
    r8.vm.provision "shell", inline: <<-SHELL
      dnf install -y epel-release python3
      dnf config-manager --set-enabled powertools
      dnf makecache
      # dnf install -y ansible
      alternatives --set python /usr/bin/python3
    SHELL
    r8.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end

  ################# rockylinux 9.4 7/13/25
  config.vm.define "r9" do |r9|
    # r9.vm.box = "bento/rockylinux-9.5"
    r9.vm.box = "rockylinux/9"
    r9.ssh.insert_key = false
    r9.vm.network 'private_network', ip: '10.1.100.199', auto_config: false
    r9.vm.hostname = 'r9.test'
    r9.vm.provision "shell", inline: <<-SHELL
      # nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.199/24
      dnf install -y epel-release python3
      dnf makecache
    SHELL
    r9.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end


  # Debian 9 7/30/23 no more security patches or releases file; removed
  # Debian 10 7/13/25 no update servers and out of date virtualbox guest
  ################# Debian 11 7/13/25
  config.vm.define "d11" do |d11|
    d11.vm.box = "debian/bullseye64"
    d11.ssh.insert_key = false
    d11.vm.network 'private_network', ip: '10.1.100.211'
    d11.vm.hostname = 'd11.test'  # won't set domain
    d11.vm.provision "shell", inline: <<-SHELL
      apt-get update --allow-releaseinfo-change -y
      apt-get install -y apt-transport-https locales
      locale-gen en_US.UTF-8
      # dpkg-reconfigure locales
    SHELL
    d11.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

  config.vm.define "d12" do |d12|
    d12.vm.box = "debian/bookworm64"
    d12.ssh.insert_key = false
    d12.vm.network 'private_network', ip: '10.1.100.212'
    d12.vm.hostname = 'd12.test'  # won't set domain
    d12.vm.provision "shell", inline: <<-SHELL
      apt-get update --allow-releaseinfo-change -y
      apt-get install -y apt-transport-https locales
      locale-gen en_US.UTF-8
      # dpkg-reconfigure locales
    SHELL
    d12.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

  ## fedora-21 vagrant box doesn't set 2nd network config correctly
  ## fedora 21 doesn't install sudo
  ## removed network-scripts/ifcfg-enp0s8 and network restart works now 2507.13MeV
  config.vm.define "f21" do |f21|
    f21.vm.box = "bento/fedora-21"
    f21.ssh.insert_key = false
    f21.vm.network 'private_network', ip: '10.1.100.221'
    f21.vm.hostname = 'f21.test'
    f21.vm.provision "shell", inline: <<-SHELL
      yum install -y sudo python libselinux-python python3
      # echo "...fixing enp0s8..."
      # sed -i -e "s/BOOTPROTO=none/BOOTPROTO=static/" /etc/sysconfig/network-scripts/ifcfg-enp0s8
      # echo "...restarting network..."
      # systemctl restart network
      # sleep 10
      # systemctl restart network
      # ip addr
    SHELL
    f21.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

  ## 8/10/22 fedora36 doesn't use legacy /etc/sysconfig/network-scripts/ifcfg-eth1 scripts
  ## https://github.com/hashicorp/vagrant/issues/12762
  ## 9/9/22 have to use nmcli manually for eth1 until vagrant fixes this
  config.vm.define "f38" do |f38|
    f38.vm.box = "fedora/38-cloud-base"
    f38.ssh.insert_key = false
    f38.vm.network 'private_network', ip: '10.1.100.238'
    f38.vm.hostname = 'f38.test'
      f38.vm.provision "shell", inline: <<-SHELL
        dnf config-manager --setopt=fastestmirror=True --save
        # dnf config-manager --add-repo https://dl.fedoraproject.org/pub/fedora/linux/releases/38/Everything/x86_64/os/
        # dnf config-manager --add-repo http://mirrors.kernel.org/fedora/releases/38/Everything/x86_64/os/
        # dnf install -y python3
        # dnf install -y NetworkManager-initscripts-ifcfg-rh
        #nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.238/24
        nmcli connection modify "Wired connection 2" ipv4.method manual ipv4.addresses "10.1.100.238/24"
        ip addr
      SHELL
    f38.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

  config.vm.define "f39" do |f39|
    f39.vm.box = "bento/fedora-39"
    f39.ssh.insert_key = false
    f39.vm.network 'private_network', ip: '10.1.100.239'
    f39.vm.hostname = 'f39.test'
      f39.vm.provision "shell", inline: <<-SHELL
        dnf config-manager --setopt=fastestmirror=True --save
        dnf config-manager --add-repo http://mirrors.kernel.org/fedora/releases/39/Everything/x86_64/os/
        dnf install -y python3 python3-libselinux
        # dnf install -y NetworkManager-initscripts-ifcfg-rh
        # nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.239/24
        nmcli connection modify "Wired connection 2" ipv4.method manual ipv4.addresses "10.1.100.239/24"
        ip addr
      SHELL
    f39.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

  config.vm.define "f40" do |f40|
    f40.vm.box = "bento/fedora-40"
    f40.ssh.insert_key = false
    f40.vm.network 'private_network', ip: '10.1.100.240'
    f40.vm.hostname = 'f40.test'
      f40.vm.provision "shell", inline: <<-SHELL
        # dnf config-manager --setopt=fastestmirror=True --save
        # dnf config-manager --add-repo http://mirrors.kernel.org/fedora/releases/40/Everything/x86_64/os/
        dnf install -y python3 python3-libselinux
        # dnf install -y NetworkManager-initscripts-ifcfg-rh
        # nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.240/24
        nmcli connection modify "Wired connection 2" ipv4.method manual ipv4.addresses "10.1.100.240/24"
        ip addr
      SHELL
    f40.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

  ## vagrant 2.4.7 and virtualbox 7.1 correctly create the 2nd interface
  config.vm.define "f41" do |f41|
    f41.vm.box = "bento/fedora-41"
    f41.ssh.insert_key = false
    f41.vm.network 'private_network', ip: '10.1.100.241'
    f41.vm.hostname = 'f41.test'
    f41.vm.provision "shell", inline: <<-SHELL
      # dnf config-manager --setopt=fastestmirror=True --save
      # dnf config-manager --add-repo http://mirrors.kernel.org/fedora/releases/41/Everything/x86_64/os/
      dnf install -y python3 python3-libselinux
    SHELL
    f41.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end



  ## ansible uses python3 1/7/21
  ## Ubuntu 18 uses 5.x virtualbox guest additions
  ################# ubuntu 18. 7/13/25
  config.vm.define "u18" do |u18|
      u18.vm.box = "ubuntu/bionic64"
      u18.vm.network 'private_network', ip: '10.1.100.118'
      u18.vm.hostname = 'u18.test'  # won't set domain
      u18.vm.provision "shell", inline: <<-SHELL
        apt-get -y install python3
      SHELL
      u18.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

  ## requires setting ansible_python_interpreter=/usr/bin/python3
  ################# ubuntu 20. 7/13/25
  config.vm.define "u20" do |u20|
      u20.vm.box = "ubuntu/focal64"
      #u20.vm.box = "bento/ubuntu-20.04"
      u20.vm.network 'private_network', ip: '10.1.100.120'
      u20.vm.hostname = 'u20.test'  # won't set domain
      u20.vm.provision "shell", inline: <<-SHELL
        apt-get -y install python3
      SHELL
      u20.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

  ################# ubuntu 22. 7/13/25
  config.vm.define "u22" do |u22|
      u22.vm.box = "ubuntu/jammy64"
      u22.vm.network 'private_network', ip: '10.1.100.122'
      u22.vm.hostname = 'u22.test'  # won't set domain
      u22.vm.provision "shell", inline: <<-SHELL
		  apt-get -y update
        apt-get -y install python3
      SHELL
      u22.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

  ################# ubuntu 24.04.2 7/13/25
  config.vm.define "u24" do |u24|
      # u24.vm.box = "alvistack/ubuntu-24.04"
      u24.vm.box = "bento/ubuntu-24.04"
      u24.vm.network 'private_network', ip: '10.1.100.124'
      u24.vm.hostname = 'u24.test'  # won't set domain
      u24.vm.provision "shell", inline: <<-SHELL
		    apt-get -y update
        apt-get -y install python3
      SHELL
      u24.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

end
