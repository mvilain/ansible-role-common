#  -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Vagrantfile for ansible-common-role
# 2207.23 added alma9 and rocky9
# 2303.04 added fedora37
# 2304.21 added fedora38, removed fedora33-35
# 2305.06 vagrantup.com SSL cert expired on 10.13; installing vagrant 2.3.0 gives warning because cert expired
# 2307.04 added debian 12; vagrant 2.3.4 works on catalina but stand-alone version more current
# 2402.28 support arm on studio
# 2404.30 added ubuntu 24.04
# 2405.27 removed fedora 39; there's no box for it yet
# 2406.18 changed ubuntu 24.04 to use bento box
# 2407.05 remove fedora-39 as it doesn't work in vmware_desktop (same for fedora-40)
# 2407.11 fixed startup and boxes for fedora-39 and 40
# 2506.28 removed f38 (no longer available); added a10, r10, f41;
#         https://portal.cloud.hashicorp.com/vagrant/discover

Vagrant.configure("2") do |config|
  config.vm.provider :vmware_desktop do |vmware|
    #vmware.vmx["ethernet0.pcislotnumber"] = "160"
  end
  # config.vm.network 'forwarded_port', guest: 80, host: 8080
  config.vm.box_download_insecure = true
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.ssh.insert_key = false
  config.vm.boot_timeout = 120
  config.vm.provider :virtualbox do |vb|
    #vb.gui = true
    vb.memory = '1024'
  end
  # provision on all machines to allow ssh w/o checking
  config.vm.provision "shell", inline: <<-SHELLALL
    echo "...disabling CheckHostIP..."
    sed -i.orig -e "s/#   CheckHostIP yes/CheckHostIP no/" /etc/ssh/ssh_config
    sed -i -e "s/.*PermitRootLogin.*/PermitRootLogin yes/" /etc/ssh/ssh_config
#     for i in /etc/sysconfig/network-scripts/ifcfg-eth1 /etc/sysconfig/network-scripts/ifcfg-enp0s8; do
#       if [ -e ${i} ]; then echo "...displaying ${i}..."; cat ${i}; fi
#     done
  SHELLALL

################### almalinux 9.6 6/28/25
  config.vm.define "a9" do |a9|
    a9.vm.box = "almalinux/9"
    a9.ssh.insert_key = false
    a9.vm.network 'private_network', ip: '10.1.100.189', auto_config: false
    a9.vm.hostname = 'a9.test'
    a9.vm.provision "shell", inline: <<-SHELL
      # nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.189/24
      dnf install -y epel-release python3
      dnf makecache
    SHELL
    a9.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end

################### almalinux 10.0 6/28/25
  config.vm.define "a10" do |a10|
    a10.vm.box = "almalinux/10"
    a10.ssh.insert_key = false
    a10.vm.network 'private_network', ip: '10.1.100.187', auto_config: false
    a10.vm.hostname = 'a10.test'
    a10.vm.provision "shell", inline: <<-SHELL
      nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.187/24
      dnf install -y epel-release python3
      dnf makecache
    SHELL
    a10.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end



################### rockylinux 9.5 6/28/25 rockylinux/9.6 checksum failed; bento/rockylinux-9.5 can't ssh
  # config.vm.define "r9" do |r9|
  #   r9.vm.box = "bento/rockylinux-9.5"
  #   r9.ssh.insert_key = false
  #   # r9.vm.network 'private_network', ip: '10.1.100.199', auto_config: false
  #   r9.vm.hostname = 'r9.test'
  #   r9.vm.provision "shell", inline: <<-SHELL
  #     # nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.199/24
  #     dnf install -y epel-release python3
  #     dnf makecache
  #   SHELL
  #   r9.vm.provision "ansible" do |ansible|
  #     ansible.compatibility_mode = "2.0"
  #     ansible.playbook = "site.yml"
  #     ansible.inventory_path = "./inventory"
  #     # ansible.verbose = "v"
  #     # ansible.raw_arguments = [""]
  #   end
  # end



################### debian 11.11 6/28/25
  config.vm.define "d11" do |d11|
    d11.vm.box = "bento/debian-11.11"
    d11.ssh.insert_key = false
    d11.vm.network 'private_network', ip: '10.1.100.211', auto_config: false
    d11.vm.hostname = 'd11.test'  # won't set domain
    d11.vm.provision "shell", inline: <<-SHELL
      apt install network-manager
      systemctl start network-manager
      systemctl enable network-manager
      nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.211/24
      apt-get update --allow-releaseinfo-change -y
      apt-get install -y apt-transport-https
    SHELL
    d11.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

################### debian 12.9 6/28/25
  config.vm.define "d12" do |d12|
    d12.vm.box = "bento/debian-12.9"
    d12.ssh.insert_key = false
    d12.vm.network 'private_network', ip: '10.1.100.212', auto_config: false
    d12.vm.hostname = 'd12.test'  # won't set domain
    d12.vm.provision "shell", inline: <<-SHELL
      apt-get update --allow-releaseinfo-change -y
      apt-get install -y apt-transport-https
    SHELL
    d12.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end


  # https://github.com/hashicorp/vagrant/issues/12762
  # 8/10/22 fedora36 doesn't use legacy /etc/sysconfig/network-scripts/ifcfg-eth1 scripts
  # 9/9/22 have to use nmcli manually for eth1 until vagrant fixes this (7/1/24 still not fixed)
################### fedora 38 2/26/24
  config.vm.define "f38" do |f38|
    f38.vm.box = "bento/fedora-38"
    f38.ssh.insert_key = false
    f38.vm.network 'private_network', ip: '10.1.100.238', auto_config: false
    f38.vm.hostname = 'f38.test'
    f38.vm.provision "shell", inline: <<-SHELL
      nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.238/24
      dnf config-manager --setopt=fastestmirror=True --save
      dnf install -y python3 python3-libselinux
      # dnf install -y NetworkManager-initscripts-ifcfg-rh
      ip addr
    SHELL
    f38.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

################### fedora 39 6/28/25 no longer available
################### fedora 40 7/11/24
  config.vm.define "f40" do |f40|
    # f40.vm.box = "gutehall/fedora40"
    f40.vm.box = "bento/fedora-40"
    f40.ssh.insert_key = false
    f40.vm.network 'private_network', ip: '10.1.100.240', auto_config: false
    f40.vm.hostname = 'f40.test'
    f40.vm.provision "shell", inline: <<-SHELL
      nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.240/24
      dnf config-manager --setopt=fastestmirror=True --save
      dnf install -y python3 python3-libselinux
      ip addr
    SHELL
    f40.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

################### fedora 41 6/28/2025
# private_network requires auto_config: false
  config.vm.define "f41" do |f41|
    # f41.vm.box = "gutehall/fedora40"
    f41.vm.box = "bento/fedora-41"
    f41.ssh.insert_key = false
    f41.vm.network 'private_network', ip: '10.1.100.241', auto_config: false
    f41.vm.hostname = 'f41.test'
    f41.vm.provision "shell", inline: <<-SHELL
      nmcli device modify eth1 ipv4.method manual ipv4.addr 10.1.100.241/24
      dnf config-manager --setopt=fastestmirror=True --save
      dnf install -y python3 python3-libselinux
      ip addr
    SHELL
    f41.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end

# requires setting ansible_python_interpreter=/usr/bin/python3
################### ubuntu 20.04 2/8/24
# 2/27/24 chronyc sources returns non-zero; can't install virtualbox or vagrant on ARM
  config.vm.define "u20" do |u20|
      u20.vm.box = "bento/ubuntu-20.04"
      u20.vm.network 'private_network', ip: '10.1.100.120', auto_config: false
      u20.vm.hostname = 'u20.test'  # won't set domain
      u20.vm.provision "shell", inline: <<-SHELL
        apt-get -y install python3
      SHELL
      u20.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

################### ubuntu 22.04 2/8/24
# 2/27/24 can't install virtualbox or vagrant on ARM
  config.vm.define "u22" do |u22|
      u22.vm.box = "bento/ubuntu-22.04"
      u22.vm.network 'private_network', ip: '10.1.100.122', auto_config: false
      u22.vm.hostname = 'u22.test'  # won't set domain
      u22.vm.provision "shell", inline: <<-SHELL
		    apt-get -y update
        apt-get -y install python3
      SHELL
      u22.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

################### ubuntu 24.04 4/30/24
  config.vm.define "u24" do |u24|
      u24.vm.box = "bento/ubuntu-24.04"
      u24.vm.network 'private_network', ip: '10.1.100.124', auto_config: false
      u24.vm.hostname = 'u24.test'  # won't set domain
      u24.vm.provision "shell", inline: <<-SHELL
		    apt-get -y update
        apt-get -y install python3
      SHELL
      u24.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

end
