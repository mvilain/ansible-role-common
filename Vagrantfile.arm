#  -*- mode: ruby -*-
# vi: set ft=ruby :
#
# Vagrantfile for ansible-common-role
# 2207.23 added alma9 and rocky9
# 2303.04 added fedora37
# 2304.21 added fedora38, removed fedora33-35
# 2305.06 vagrantup.com SSL cert expired on 10.13; installing vagrant 2.3.0 gives warning because cert expired
# 2307.04 added debian 12; vagrant 2.3.4 works on catalina but stand-alone version more current
# 2402.28 support arm on studio

Vagrant.configure("2") do |config|
  config.vm.provider :vmware_desktop do |vmware|
    #vmware.vmx["ethernet0.pcislotnumber"] = "160"
  end
  # config.vm.network 'forwarded_port', guest: 80, host: 8080
  config.vm.box_download_insecure = true
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.ssh.insert_key = false
  config.vm.boot_timeout = 120
  config.vm.provider :virtualbox do |vb|
    #vb.gui = true
    vb.memory = '1024'
  end
  # provision on all machines to allow ssh w/o checking
  config.vm.provision "shell", inline: <<-SHELLALL
    echo "...disabling CheckHostIP..."
    sed -i.orig -e "s/#   CheckHostIP yes/CheckHostIP no/" /etc/ssh/ssh_config
    sed -i -e "s/.*PermitRootLogin.*/PermitRootLogin yes/" /etc/ssh/ssh_config
#     for i in /etc/sysconfig/network-scripts/ifcfg-eth1 /etc/sysconfig/network-scripts/ifcfg-enp0s8; do
#       if [ -e ${i} ]; then echo "...displaying ${i}..."; cat ${i}; fi
#     done
  SHELLALL

################### almalinux 9.3
# 2/27/24 can't install vagrant on ARM
  config.vm.define "a9" do |a9|
    a9.vm.box = "almalinux/9"
    a9.ssh.insert_key = false
    a9.vm.network 'private_network', ip: '192.168.10.189'
    a9.vm.hostname = 'a9.test'
    a9.vm.provision "shell", inline: <<-SHELL
      dnf install -y epel-release python3
      dnf makecache
    SHELL
    a9.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end



################### rockylinux 9.3 2/8/24
# 2/27/24 can't install vagrant on ARM
  config.vm.define "r9" do |r9|
    r9.vm.box = "bento/rockylinux-9"
    r9.ssh.insert_key = false
    r9.vm.network 'private_network', ip: '192.168.10.199'
    r9.vm.hostname = 'r9.test'
    r9.vm.provision "shell", inline: <<-SHELL
      dnf install -y epel-release python3
      dnf makecache
    SHELL
    r9.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
      # ansible.verbose = "v"
      # ansible.raw_arguments = [""]
    end
  end


################### debian12 2/8/24
# 2/27/24 can't install virtualbox or vagrant on ARM
  config.vm.define "d12" do |d12|
    d12.vm.box = "bento/debian-12"
    d12.ssh.insert_key = false
    d12.vm.network 'private_network', ip: '192.168.10.212'
    d12.vm.hostname = 'd12.test'  # won't set domain
    d12.vm.provision "shell", inline: <<-SHELL
      apt-get update --allow-releaseinfo-change -y
      apt-get install -y apt-transport-https
    SHELL
    d12.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end


  # 8/10/22 fedora36 doesn't use legacy /etc/sysconfig/network-scripts/ifcfg-eth1 scripts
  # https://github.com/hashicorp/vagrant/issues/12762
  # 9/9/22 have to use nmcli manually for eth1 until vagrant fixes this
################### fedora 38 2/26/24
  config.vm.define "f38" do |f38|
    f38.vm.box = "bento/fedora-38"
    f38.ssh.insert_key = false
    f38.vm.network 'private_network', ip: '192.168.10.238'
    f38.vm.hostname = 'f38.test'
      f38.vm.provision "shell", inline: <<-SHELL
        dnf config-manager --setopt=fastestmirror=True --save
        # dnf install -y python3
        dnf install -y NetworkManager-initscripts-ifcfg-rh
        nmcli device modify eth1 ipv4.method manual ipv4.addr 192.168.10.238/24
        ip addr
      SHELL
    f38.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end
################### fedora 39 2/8/24
  config.vm.define "f39" do |f39|
    f39.vm.box = "bento/fedora-39"
    f39.ssh.insert_key = false
    f39.vm.network 'private_network', ip: '192.168.10.239'
    #f39.vm.hostname = 'f39.test'
      f39.vm.provision "shell", inline: <<-SHELL
        dnf config-manager --setopt=fastestmirror=True --save
        # dnf install -y python3
        dnf install -y NetworkManager-initscripts-ifcfg-rh
        #nmcli device modify eth1 ipv4.method manual ipv4.addr 192.168.10.239/24
        ip addr
      SHELL
    f39.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "site.yml"
      ansible.inventory_path = "./inventory"
    end
  end



  # requires setting ansible_python_interpreter=/usr/bin/python3
################### ubuntu 20.04 2/8/24
# 2/27/24 chronyc sources returns non-zero; can't install virtualbox or vagrant on ARM
  config.vm.define "u20" do |u20|
      u20.vm.box = "bento/ubuntu-20.04"
      u20.vm.network 'private_network', ip: '192.168.10.120'
      u20.vm.hostname = 'u20.test'  # won't set domain
      u20.vm.provision "shell", inline: <<-SHELL
        apt-get -y install python3
      SHELL
      u20.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

################### ubuntu 22.04 2/8/24
# 2/27/24 can't install virtualbox or vagrant on ARM
  config.vm.define "u22" do |u22|
      u22.vm.box = "bento/ubuntu-22.04"
      u22.vm.network 'private_network', ip: '192.168.10.122'
      u22.vm.hostname = 'u22.test'  # won't set domain
      u22.vm.provision "shell", inline: <<-SHELL
		  apt-get -y update
        apt-get -y install python3
      SHELL
      u22.vm.provision "ansible" do |ansible|
        ansible.compatibility_mode = "2.0"
        ansible.playbook = "site.yml"
        ansible.inventory_path = "./inventory"
      end
  end

end